<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-kernfs">
  <?dbhtml filename="kernfs.html"?>

  <title>Preparing Virtual Kernel File Systems</title>

  <indexterm zone="ch-system-kernfs">
    <primary sortas="e-/dev/">/dev/*</primary>
  </indexterm>

    <para>Various file systems exported by the kernel are used to communicate to
    and from the kernel itself. These file systems are virtual in that no disk
    space is used for them. The content of the file systems resides in
    memory.</para>

    <para>Begin by creating directories onto which the file systems will be
    mounted:</para>

<screen><userinput>mkdir -v $LFS/{dev,proc,sys}</userinput></screen>

  <sect2>
    <title>Creating Initial Device Nodes</title>

    <para>When the kernel boots the system, it requires the presence of a few
    device nodes, in particular the <filename
    class="devicefile">console</filename> and <filename
    class="devicefile">null</filename> devices. The device nodes must be created
    on the hard disk so that they are available before <command>udevd</command>
    has been started, and additionally when Linux is started with
    <parameter>init=/bin/bash</parameter>. Create the devices by running the
    following commands:</para>

<screen><userinput>mknod -m 600 $LFS/dev/console c 5 1
mknod -m 666 $LFS/dev/null c 1 3</userinput></screen>

  </sect2>

  <sect2 id="ch-system-bindmount">
    <title>Mounting and Populating /dev</title>

      <para>The recommended method of populating the <filename
      class="directory">/dev</filename> directory with devices is to mount a
      virtual filesystem (such as <systemitem
      class="filesystem">tmpfs</systemitem>) on the <filename
      class="directory">/dev</filename> directory, and allow the devices to be
      created dynamically on that virtual filesystem as they are detected or
      accessed. Device creation is generally done during the boot process
      by Udev. Since this new system does not yet have Udev and has not yet
      been booted, it is necessary to mount and populate <filename
      class="directory">/dev</filename> manually. This is accomplished by bind
      mounting the host system's <filename class="directory">/dev</filename>
      directory. A bind mount is a special type of mount that allows you to
      create a mirror of a directory or mount point to some other location. Use
      the following command to achieve this:</para>

<screen><userinput>mount -v --bind /dev $LFS/dev</userinput></screen>

  </sect2>

  <sect2 id="ch-system-kernfsmount">
    <title>Mounting Virtual Kernel File Systems</title>

      <para>Now mount the remaining virtual kernel filesystems:</para>

<screen><userinput>mount -vt devpts devpts $LFS/dev/pts
mount -vt proc proc $LFS/proc
mount -vt sysfs sysfs $LFS/sys</userinput></screen>

      <para>In some host systems, <filename>/dev/shm</filename> is a 
      symbolic link to <filename class="directory">/run/shm</filename>.
      Inside a chroot envirnment, this symbolic link needs to be
      changed to a normal directory before mounting as a temporary
      file system:</para>

<screen><userinput>if [ -h /dev/shm ]; then
   rm -f $LFS/dev/shm
   mkdir $LFS/dev/shm
fi

mount -vt tmpfs shm $LFS/dev/shm</userinput></screen>

  </sect2>

</sect1>
